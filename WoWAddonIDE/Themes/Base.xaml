<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit">

    <!-- 1) Fallback palette so the designer never complains -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <!-- Light-ish defaults; will be overridden by real palette below -->
            <SolidColorBrush x:Key="Brush.Window"           Color="#FFF6F6F6"/>
            <SolidColorBrush x:Key="Brush.Panel"            Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="Brush.Chrome"           Color="#FFE9E9E9"/>
            <SolidColorBrush x:Key="Brush.Border"           Color="#FFCDCDCD"/>
            <SolidColorBrush x:Key="Brush.FG"               Color="#FF111111"/>
            <SolidColorBrush x:Key="Brush.Accent"           Color="#FF007ACC"/>

            <SolidColorBrush x:Key="Brush.EditorBG"         Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="Brush.EditorFG"         Color="#FF1E1E1E"/>
            <SolidColorBrush x:Key="Brush.EditorLine"       Color="#FF6E7681"/>
            <SolidColorBrush x:Key="Brush.EditorSelection"  Color="#FF9FC5E8"/>
            <SolidColorBrush x:Key="Brush.SelectionBorder"  Color="#FF007ACC"/>
        </ResourceDictionary>

        <!-- 2) Real palette (ThemeManager swaps Light/Dark at runtime) -->
        <!-- If your assembly name differs, use: /YourAssembly;component/Themes/Light.xaml -->
        <ResourceDictionary Source="pack://application:,,,/Themes/Light.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- ========== Global styles (theme-aware) ========== -->

    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource Brush.Window}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.FG}"/>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource Brush.Chrome}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.FG}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="Foreground" Value="{DynamicResource Brush.FG}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Setter Property="Padding" Value="6,3"/>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Accent}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Accent}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToolBar">
        <Setter Property="Background" Value="{DynamicResource Brush.Chrome}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.FG}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style TargetType="StatusBar">
        <Setter Property="Background" Value="{DynamicResource Brush.Chrome}"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.FG}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    </Style>

    <Style TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource Brush.Window}"/>
    </Style>

    <Style TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    </Style>

    <!-- GroupBox: dark-friendly chrome -->
    <Style TargetType="GroupBox">
        <Setter Property="Foreground"   Value="{DynamicResource Brush.FG}" />
        <Setter Property="Background"   Value="{DynamicResource Brush.Panel}" />
        <Setter Property="BorderBrush"  Value="{DynamicResource Brush.Border}" />
        <Setter Property="Padding"      Value="6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0"
                                Background="{TemplateBinding Background}"
                                Padding="6,0"
                                Margin="6,0,6,0"
                                CornerRadius="4">
                            <ContentPresenter ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="Center"
                                              TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>

                        <Border Grid.Row="1"
                                Margin="0,6,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="6">
                            <ContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TreeView">
        <Setter Property="Background"  Value="{DynamicResource Brush.Panel}"/>
        <Setter Property="Foreground"  Value="{DynamicResource Brush.FG}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Background"  Value="{DynamicResource Brush.Panel}"/>
        <Setter Property="Foreground"  Value="{DynamicResource Brush.FG}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Brush.FG}"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Background"  Value="{DynamicResource Brush.Panel}"/>
        <Setter Property="Foreground"  Value="{DynamicResource Brush.FG}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Setter Property="SelectionOpacity" Value="0.5"/>
        <Setter Property="CaretBrush" Value="{DynamicResource Brush.FG}"/>
    </Style>

    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource Brush.Panel}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="Foreground" Value="{DynamicResource Brush.FG}"/>
        <Setter Property="Background" Value="{DynamicResource Brush.Panel}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Window}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.FG}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ScrollViewer">
        <Setter Property="Background" Value="{DynamicResource Brush.Panel}"/>
    </Style>

    <Style TargetType="ScrollBar">
        <Setter Property="Background" Value="{DynamicResource Brush.Panel}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    </Style>

    <!-- AvalonEdit: designer-safe setters only; selection/caret set in code -->
    <Style TargetType="{x:Type avalonEdit:TextEditor}">
        <Setter Property="Background"             Value="{DynamicResource Brush.EditorBG}"/>
        <Setter Property="Foreground"             Value="{DynamicResource Brush.EditorFG}"/>
        <Setter Property="LineNumbersForeground"  Value="{DynamicResource Brush.EditorLine}"/>
        <Setter Property="BorderBrush"            Value="{DynamicResource Brush.Border}"/>
        <Setter Property="BorderThickness"        Value="1"/>
        <Setter Property="ShowLineNumbers"        Value="True"/>
    </Style>

</ResourceDictionary>